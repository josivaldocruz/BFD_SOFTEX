Exercícios sobre exceptions
Escreva um programa que peça ao usuário para digitar um número. Trate o erro caso ele digite algo que não seja um número inteiro.

Peça ao usuário dois números e tente multiplicá-los. Se o usuário digitar algo inválido, exiba uma mensagem de erro.

Crie um programa que peça ao usuário um número inteiro. Se a conversão for bem-sucedida, mostre uma mensagem usando o bloco else.

Implemente um programa que abra um arquivo chamado dados.txt (não precisa existir). Use try e finally para garantir que uma mensagem de "Encerrando programa" seja sempre exibida.

Crie uma função dividir(a, b) que lance (raise) uma exceção ZeroDivisionError se b for igual a zero. Caso contrário, retorne o resultado da divisão.

Crie uma exceção personalizada chamada IdadeInvalidaError. Depois, crie uma função cadastrar_idade(idade) que lance essa exceção caso a idade seja negativa.

Peça ao usuário dois números e divida o primeiro pelo segundo. Trate dois tipos de erro:

ValueError se o usuário digitar algo inválido

ZeroDivisionError se tentar dividir por zero

Crie um programa que peça ao usuário um número inteiro e verifique se ele é par. Use:

try para a conversão,

else para verificar se é par ou ímpar,
finally para exibir "Fim do programa".

Crie uma função sacar(saldo, valor) que:

Lance (raise) uma exceção personalizada SaldoInsuficienteError se o valor for maior que o saldo.

Caso contrário, retorne o novo saldo. Teste a função dentro de um try-except e exiba uma mensagem apropriada ao usuário.